DROP SEQUENCE NL_Document_seq ; 
create sequence NL_Document_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger NL_Document_PK_trig 
before insert on NL_Document
for each row 
begin 
select NL_Document_seq.nextval into :new.document_id from dual; 
end; 
/
alter table NL_Document add created date ; 
alter table NL_Document add created_by VARCHAR2 (255) ; 
alter table NL_Document add row_version_number integer ; 
alter table NL_Document add updated date ; 
alter table NL_Document add updated_by VARCHAR2 (255) ; 
/
create or replace trigger NL_Document_AUD_trig 
before insert or update on NL_Document 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE NL_Emp_seq ; 
create sequence NL_Emp_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger NL_Emp_PK_trig 
before insert on NL_Emp
for each row 
begin 
select NL_Emp_seq.nextval into :new.employee_id from dual; 
end; 
/
alter table NL_Emp add created date ; 
alter table NL_Emp add created_by VARCHAR2 (255) ; 
alter table NL_Emp add row_version_number integer ; 
alter table NL_Emp add updated date ; 
alter table NL_Emp add updated_by VARCHAR2 (255) ; 
/
create or replace trigger NL_Emp_AUD_trig 
before insert or update on NL_Emp 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE NL_Member_List_seq ; 
create sequence NL_Member_List_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger NL_Member_List_PK_trig 
before insert on NL_Member_List
for each row 
begin 
select NL_Member_List_seq.nextval into :new.member_list_id from dual; 
end; 
/
alter table NL_Member_List add created date ; 
alter table NL_Member_List add created_by VARCHAR2 (255) ; 
alter table NL_Member_List add row_version_number integer ; 
alter table NL_Member_List add updated date ; 
alter table NL_Member_List add updated_by VARCHAR2 (255) ; 
/
create or replace trigger NL_Member_List_AUD_trig 
before insert or update on NL_Member_List 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE NL_Note_list_seq ; 
create sequence NL_Note_list_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger NL_Note_list_PK_trig 
before insert on NL_Note_list
for each row 
begin 
select NL_Note_list_seq.nextval into :new.list_seq_id from dual; 
end; 
/
alter table NL_Note_list add created date ; 
alter table NL_Note_list add created_by VARCHAR2 (255) ; 
alter table NL_Note_list add row_version_number integer ; 
alter table NL_Note_list add updated date ; 
alter table NL_Note_list add updated_by VARCHAR2 (255) ; 
/
create or replace trigger NL_Note_list_AUD_trig 
before insert or update on NL_Note_list 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE NL_User_seq ; 
create sequence NL_User_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger NL_User_PK_trig 
before insert on NL_User
for each row 
begin 
select NL_User_seq.nextval into :new.user_id from dual; 
end; 
/
alter table NL_User add created date ; 
alter table NL_User add created_by VARCHAR2 (255) ; 
alter table NL_User add row_version_number integer ; 
alter table NL_User add updated date ; 
alter table NL_User add updated_by VARCHAR2 (255) ; 
/
create or replace trigger NL_User_AUD_trig 
before insert or update on NL_User 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP INDEX NL_Emp_employee_id_FK_0 ;
CREATE INDEX NL_Emp_employee_id_FK_0 ON NL_Document(NL_Emp_employee_id) ;
DROP INDEX NL_Emp_employee_id_FK_1 ;
CREATE INDEX NL_Emp_employee_id_FK_1 ON NL_Member_List(NL_Emp_employee_id) ;
DROP INDEX NL_Note_list_list_seq__FK_2 ;
CREATE INDEX NL_Note_list_list_seq__FK_2 ON NL_Member_List(NL_Note_list_list_seq_id) ;
DROP INDEX NL_Note_list_list_seq__FK_3 ;
CREATE INDEX NL_Note_list_list_seq__FK_3 ON NL_User_List(NL_Note_list_list_seq_id) ;
DROP INDEX NL_User_user_id_FK_4 ;
CREATE INDEX NL_User_user_id_FK_4 ON NL_User_List(NL_User_user_id) ;
